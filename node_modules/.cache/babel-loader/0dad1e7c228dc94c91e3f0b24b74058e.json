{"ast":null,"code":"var _jsxFileName = \"C:\\\\NODE\\\\FREELANCER\\\\WebSocket\\\\socket2\\\\client\\\\src\\\\Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport uuid from 'uuid/dist/v4';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst myId = uuid(); //Conectar ao servidor\n\nconst socket = io('http://localhost:8080');\nsocket.on('connect', () => console.log('[IO] Conectar => Uma nova conexão foi estabelecida')); //Conectar ao servidor\n\nconst Chat = () => {\n  _s();\n\n  const [message, updateMessage] = useState('');\n  const [messages, updateMessages] = useState([]);\n  useEffect(() => {\n    const handleNewMessage = newMessage => updateMessages([...messages, newMessage]);\n\n    socket.on('chat.message', handleNewMessage);\n    return () => socket.off('chat.message', handleNewMessage);\n  }, [messages]);\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n\n    if (message.trim()) {\n      socket.emit('chat.message', {\n        id: myId,\n        message\n      });\n      updateMessage('');\n    }\n  };\n\n  const handleInputChange = event => updateMessage(event.target.value);\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list\",\n      children: messages.map((m, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `list__item list__item--${m.id === myId ? 'mine' : 'other'}`,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `message message--${m.id === myId ? 'mine' : 'other'}`,\n          children: m.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: handleFormSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form__field\",\n        onChange: handleInputChange,\n        placeholder: \"Escreva uma mensagem\",\n        type: \"text\",\n        value: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Chat, \"HO/xg/OJMSFNdNRWZNE8NEvysc0=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["C:/NODE/FREELANCER/WebSocket/socket2/client/src/Chat.js"],"names":["React","useEffect","useState","io","uuid","myId","socket","on","console","log","Chat","message","updateMessage","messages","updateMessages","handleNewMessage","newMessage","off","handleFormSubmit","event","preventDefault","trim","emit","id","handleInputChange","target","value","map","m","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,IAAP,MAAiB,cAAjB;;AAEA,MAAMC,IAAI,GAAGD,IAAI,EAAjB,C,CAEA;;AACA,MAAME,MAAM,GAAGH,EAAE,CAAC,uBAAD,CAAjB;AACAG,MAAM,CAACC,EAAP,CAAU,SAAV,EAAqB,MAAMC,OAAO,CAACC,GAAR,CAAY,oDAAZ,CAA3B,E,CACA;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,QAAM,CAACC,OAAD,EAAUC,aAAV,IAA2BV,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAM,CAACW,QAAD,EAAWC,cAAX,IAA6BZ,QAAQ,CAAC,EAAD,CAA3C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMc,gBAAgB,GAAGC,UAAU,IAC/BF,cAAc,CAAC,CAAC,GAAGD,QAAJ,EAAcG,UAAd,CAAD,CADlB;;AAEAV,IAAAA,MAAM,CAACC,EAAP,CAAU,cAAV,EAA0BQ,gBAA1B;AACA,WAAO,MAAMT,MAAM,CAACW,GAAP,CAAW,cAAX,EAA2BF,gBAA3B,CAAb;AACH,GALQ,EAKN,CAACF,QAAD,CALM,CAAT;;AAOA,QAAMK,gBAAgB,GAAGC,KAAK,IAAI;AAC9BA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAIT,OAAO,CAACU,IAAR,EAAJ,EAAoB;AAChBf,MAAAA,MAAM,CAACgB,IAAP,CAAY,cAAZ,EAA4B;AACxBC,QAAAA,EAAE,EAAElB,IADoB;AAExBM,QAAAA;AAFwB,OAA5B;AAIAC,MAAAA,aAAa,CAAC,EAAD,CAAb;AACH;AACJ,GATD;;AAWA,QAAMY,iBAAiB,GAAGL,KAAK,IAC3BP,aAAa,CAACO,KAAK,CAACM,MAAN,CAAaC,KAAd,CADjB;;AAGA,sBACI;AAAM,IAAA,SAAS,EAAC,WAAhB;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA,gBACMb,QAAQ,CAACc,GAAT,CAAa,CAACC,CAAD,EAAIC,KAAJ,kBACX;AACI,QAAA,SAAS,EAAG,0BAAyBD,CAAC,CAACL,EAAF,KAASlB,IAAT,GAAgB,MAAhB,GAAyB,OAAQ,EAD1E;AAAA,+BAII;AAAM,UAAA,SAAS,EAAG,oBAAmBuB,CAAC,CAACL,EAAF,KAASlB,IAAT,GAAgB,MAAhB,GAAyB,OAAQ,EAAtE;AAAA,oBACMuB,CAAC,CAACjB;AADR;AAAA;AAAA;AAAA;AAAA;AAJJ,SAESkB,KAFT;AAAA;AAAA;AAAA;AAAA,cADF;AADN;AAAA;AAAA;AAAA;AAAA,YADJ,eAaI;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAuB,MAAA,QAAQ,EAAEX,gBAAjC;AAAA,6BACI;AACI,QAAA,SAAS,EAAC,aADd;AAEI,QAAA,QAAQ,EAAEM,iBAFd;AAGI,QAAA,WAAW,EAAC,sBAHhB;AAII,QAAA,IAAI,EAAC,MAJT;AAKI,QAAA,KAAK,EAAEb;AALX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH,CAlDD;;GAAMD,I;;KAAAA,I;AAoDN,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport io from 'socket.io-client'\r\nimport uuid from 'uuid/dist/v4'\r\n\r\nconst myId = uuid()\r\n\r\n//Conectar ao servidor\r\nconst socket = io('http://localhost:8080')\r\nsocket.on('connect', () => console.log('[IO] Conectar => Uma nova conexão foi estabelecida'))\r\n//Conectar ao servidor\r\n\r\nconst Chat = () => {\r\n    const [message, updateMessage] = useState('')\r\n    const [messages, updateMessages] = useState([])\r\n\r\n    useEffect(() => {\r\n        const handleNewMessage = newMessage =>\r\n            updateMessages([...messages, newMessage])\r\n        socket.on('chat.message', handleNewMessage)\r\n        return () => socket.off('chat.message', handleNewMessage)\r\n    }, [messages])\r\n\r\n    const handleFormSubmit = event => {\r\n        event.preventDefault()\r\n        if (message.trim()) {\r\n            socket.emit('chat.message', {\r\n                id: myId,\r\n                message\r\n            })\r\n            updateMessage('')\r\n        }\r\n    }\r\n\r\n    const handleInputChange = event =>\r\n        updateMessage(event.target.value)\r\n\r\n    return (\r\n        <main className=\"container\">\r\n            <ul className=\"list\">\r\n                { messages.map((m, index) => (\r\n                    <li\r\n                        className={`list__item list__item--${m.id === myId ? 'mine' : 'other'}`}\r\n                        key={index}\r\n                    >\r\n                        <span className={`message message--${m.id === myId ? 'mine' : 'other'}`}>\r\n                            { m.message }\r\n                        </span>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            <form className=\"form\" onSubmit={handleFormSubmit}>\r\n                <input\r\n                    className=\"form__field\"\r\n                    onChange={handleInputChange}\r\n                    placeholder=\"Escreva uma mensagem\"\r\n                    type=\"text\"\r\n                    value={message}\r\n                />\r\n            </form>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n"]},"metadata":{},"sourceType":"module"}